Viết chương trình nhập vào một số nguyên dương N≤100000 và một chuỗi gồm N số nguyên trong khoảng từ 1 đến N, xác định xem trong chuỗi số đó có hai số nào bằng nhau hay không.

Đầu vào:

Dòng đầu tiên chứa số nguyên dương N
Dòng thứ hai chứa N số nguyên trong khoảng từ 1 đến N, cách nhau bởi dấu cách.
Đầu ra:

In ra Yes nếu trong chuỗi có hai số bằng nhau, nếu không in ra No
Gợi ý

Dùng một tập hợp ban đầu rỗng, duyệt từng số trong chuỗi, nếu số đó chưa có trong tập hợp thì bỏ nó vào trong tập hợp, nếu nó có rồi nghĩa là chuỗi có ít nhất hai số cùng giá trị, kết luận có trùng. Duyệt đến hết chuỗi rồi mà chưa kết luận trùng nghĩa là không có lặp. Làm thế nào để mô hình hoá một tập hợp các số từ 1 đến N
? Dùng mảng bool, seen[i]=true nghĩa là đã gặp giá trị i rồi.

#include <iostream>
#include <unordered_set>
#include <vector>

using namespace std;

int main() {
    int N;
    cin >> N;

    if (N <= 0 || N > 100000) {
        cout << "No" << endl;
        return 0;
    }

    vector<int> numbers(N);
    unordered_set<int> seenNumbers;

    for (int i = 0; i < N; i++) {
        cin >> numbers[i];
    }

    for (int i = 0; i < N; i++) {
        if (numbers[i] < 1 || numbers[i] > N) {
            cout << "No" << endl;
            return 0;
        }
        if (seenNumbers.find(numbers[i]) != seenNumbers.end()) {
            cout << "Yes" << endl;
            return 0;
        }
        seenNumbers.insert(numbers[i]);
    }

    cout << "No" << endl;
    return 0;
}
